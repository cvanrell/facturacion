{"version":3,"file":"formik-custom.cjs.development.js","sources":["../src/connect.tsx","../src/utils.ts","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/FieldArray.tsx","../src/FastField.tsx","../src/ErrorMessage.tsx"],"sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport createContext from 'create-react-context';\nimport { FormikContext } from './types';\n\nexport const {\n  Provider: FormikProvider,\n  Consumer: FormikConsumer,\n} = createContext<FormikContext<any>>({} as any);\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContext<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => <Comp {...props} formik={formik} />}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics<\n    OuterProps,\n    OuterProps & { formik: FormikContext<Values> }\n  >(\n    C,\n    Comp as React.ComponentClass<OuterProps & { formik: FormikContext<Values> }> // cast type to ComponentClass (even if SFC)\n  );\n}\n","import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): boolean =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Make a promise cancellable by @istarkov\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\nexport function makeCancelable<T extends Promise<any>>(\n  promise: T\n): [T, () => void] {\n  let hasCanceled: boolean = false;\n\n  const wrappedPromise: any = new Promise((resolve, reject) => {\n    promise.then(\n      val => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)),\n      error => (hasCanceled ? reject({ isCanceled: true }) : reject(error))\n    );\n  });\n\n  return [\n    wrappedPromise,\n    function cancel() {\n      hasCanceled = true;\n    },\n  ];\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\r\nimport isEqual from 'react-fast-compare';\r\nimport deepmerge from 'deepmerge';\r\nimport { FormikProvider } from './connect';\r\nimport warning from 'tiny-warning';\r\nimport {\r\n  FormikActions,\r\n  FormikConfig,\r\n  FormikErrors,\r\n  FormikState,\r\n  FormikTouched,\r\n  FormikValues,\r\n  FormikProps,\r\n} from './types';\r\nimport {\r\n  isEmptyChildren,\r\n  isFunction,\r\n  isNaN,\r\n  isPromise,\r\n  isString,\r\n  isInputEvent,\r\n  setIn,\r\n  setNestedObjectValues,\r\n  getActiveElement,\r\n  getIn,\r\n  makeCancelable,\r\n} from './utils';\r\n\r\nexport class Formik<Values = FormikValues> extends React.Component<\r\n  FormikConfig<Values>,\r\n  FormikState<Values>\r\n> {\r\n  static defaultProps = {\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    isInitialValid: false,\r\n    enableReinitialize: false,\r\n  };\r\n\r\n  initialValues: Values;\r\n  didMount: boolean;\r\n  hcCache: {\r\n    [key: string]: (e: unknown | React.ChangeEvent<any>) => void;\r\n  } = {};\r\n  hbCache: {\r\n    [key: string]: (e: any) => void;\r\n  } = {};\r\n  fields: {\r\n    [field: string]: React.Component<any>;\r\n  };\r\n  validator: any;\r\n\r\n  constructor(props: FormikConfig<Values>) {\r\n    super(props);\r\n    this.state = {\r\n      values: props.initialValues || ({} as any),\r\n      errors: {},\r\n      touched: {},\r\n      isSubmitting: false,\r\n      isValidating: false,\r\n      submitCount: 0,\r\n      status: props.initialStatus,\r\n    };\r\n    this.didMount = false;\r\n    this.fields = {};\r\n    this.initialValues = props.initialValues || ({} as any);\r\n    warning(\r\n      !(props.component && props.render),\r\n      'You should not use <Formik component> and <Formik render> in the same <Formik> component; <Formik render> will be ignored'\r\n    );\r\n\r\n    warning(\r\n      !(props.component && props.children && !isEmptyChildren(props.children)),\r\n      'You should not use <Formik component> and <Formik children> in the same <Formik> component; <Formik children> will be ignored'\r\n    );\r\n\r\n    warning(\r\n      !(props.render && props.children && !isEmptyChildren(props.children)),\r\n      'You should not use <Formik render> and <Formik children> in the same <Formik> component; <Formik children> will be ignored'\r\n    );\r\n  }\r\n\r\n  registerField = (name: string, Comp: React.Component<any>) => {\r\n    this.fields[name] = Comp;\r\n  };\r\n\r\n  unregisterField = (name: string) => {\r\n    delete this.fields[name];\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.didMount = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // This allows us to prevent setting state on an\r\n    // unmounted component. This can occur if Formik is in a modal, and submission\r\n    // toggles show/hide, and validation of a blur field takes longer than validation\r\n    // before a submit.\r\n    // @see https://github.com/jaredpalmer/formik/issues/597\r\n    // @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\r\n    this.didMount = false;\r\n\r\n    // Cancel validation on unmount.\r\n    if (this.validator) {\r\n      this.validator();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<FormikConfig<Values>>) {\r\n    // If the initialValues change, reset the form\r\n    if (\r\n      this.props.enableReinitialize &&\r\n      !isEqual(prevProps.initialValues, this.props.initialValues)\r\n    ) {\r\n      this.initialValues = this.props.initialValues;\r\n      // @todo refactor to use getDerivedStateFromProps?\r\n      this.resetForm(this.props.initialValues);\r\n    }\r\n  }\r\n\r\n  setErrors = (errors: FormikErrors<Values>) => {\r\n    this.setState({ errors });\r\n  };\r\n\r\n  setTouched = (touched: FormikTouched<Values>) => {\r\n    this.setState({ touched }, () => {\r\n      if (this.props.validateOnBlur) {\r\n        this.runValidations(this.state.values);\r\n      }\r\n    });\r\n  };\r\n\r\n  setValues = (values: FormikState<Values>['values']) => {\r\n    this.setState({ values }, () => {\r\n      if (this.props.validateOnChange) {\r\n        this.runValidations(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  setStatus = (status?: any) => {\r\n    this.setState({ status });\r\n  };\r\n\r\n  setError = (error: any) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn(\r\n        `Warning: Formik\\'s setError(error) is deprecated and may be removed in future releases. Please use Formik\\'s setStatus(status) instead. It works identically. For more info see https://github.com/jaredpalmer/formik#setstatus-status-any--void`\r\n      );\r\n    }\r\n    this.setState({ error });\r\n  };\r\n\r\n  setSubmitting = (isSubmitting: boolean) => {\r\n    if (this.didMount) {\r\n      this.setState({ isSubmitting });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Run field level validation\r\n   */\r\n  validateField = (field: string): Promise<Object> => {\r\n    this.setState({ isValidating: true });\r\n    return this.runSingleFieldLevelValidation(\r\n      field,\r\n      getIn(this.state.values, field)\r\n    ).then(error => {\r\n      if (this.didMount) {\r\n        this.setState({\r\n          errors: setIn(this.state.errors, field, error),\r\n          isValidating: false,\r\n        });\r\n      }\r\n      return error;\r\n    });\r\n  };\r\n\r\n  runSingleFieldLevelValidation = (\r\n    field: string,\r\n    value: void | string\r\n  ): Promise<string> => {\r\n    return new Promise(resolve =>\r\n      resolve(this.fields[field].props.validate(value))\r\n    ).then(x => x, e => e);\r\n  };\r\n\r\n  runFieldLevelValidations(\r\n      values: FormikValues,\r\n      fieldId?: string\r\n  ): Promise<FormikErrors<Values>> {\r\n      let fieldKeysWithValidation: string[] = [];\r\n\r\n      if (!fieldId) {\r\n          fieldKeysWithValidation = Object.keys(this.fields).filter(\r\n              f =>\r\n                  this.fields &&\r\n                  this.fields[f] &&\r\n                  this.fields[f].props.validate &&\r\n                  isFunction(this.fields[f].props.validate)\r\n          );\r\n      }\r\n      else if (this.fields && this.fields[fieldId] && this.fields[fieldId].props.validate\r\n          && isFunction(this.fields[fieldId].props.validate)) {\r\n\r\n            fieldKeysWithValidation = [fieldId];\r\n      }\r\n\r\n    // Construct an array with all of the field validation functions\r\n    const fieldValidations: Promise<string>[] =\r\n      fieldKeysWithValidation.length > 0\r\n        ? fieldKeysWithValidation.map(f =>\r\n            this.runSingleFieldLevelValidation(f, getIn(values, f))\r\n          )\r\n        : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\r\n\r\n    return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\r\n      fieldErrorsList.reduce(\r\n        (prev, curr, index) => {\r\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\r\n            return prev;\r\n          }\r\n          if (!!curr) {\r\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\r\n          }\r\n          return prev;\r\n        },\r\n        {} as FormikErrors<Values>\r\n      )\r\n    );\r\n  }\r\n\r\n  runValidateHandler(values: FormikValues): Promise<FormikErrors<Values>> {\r\n    return new Promise(resolve => {\r\n      const maybePromisedErrors = (this.props.validate as any)(values);\r\n      if (maybePromisedErrors === undefined) {\r\n        resolve({});\r\n      } else if (isPromise(maybePromisedErrors)) {\r\n        (maybePromisedErrors as Promise<any>).then(\r\n          () => {\r\n            resolve({});\r\n          },\r\n          errors => {\r\n            resolve(errors);\r\n          }\r\n        );\r\n      } else {\r\n        resolve(maybePromisedErrors);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\r\n  runValidationSchema = (values: FormikValues) => {\r\n    return new Promise(resolve => {\r\n      const { validationSchema } = this.props;\r\n      const schema = isFunction(validationSchema)\r\n        ? validationSchema()\r\n        : validationSchema;\r\n      validateYupSchema(values, schema).then(\r\n        () => {\r\n          resolve({});\r\n        },\r\n        (err: any) => {\r\n          resolve(yupToFormErrors(err));\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Run all validations methods and update state accordingly\r\n   */\r\n  runValidations = (\r\n      values: FormikValues = this.state.values,\r\n      fieldId?: string\r\n  ): Promise<FormikErrors<Values>> => {\r\n    if (this.validator) {\r\n      this.validator();\r\n    }\r\n\r\n    const [promise, cancel] = makeCancelable(\r\n      Promise.all([\r\n        this.runFieldLevelValidations(values, fieldId),\r\n        this.props.validationSchema ? this.runValidationSchema(values) : {},\r\n        this.props.validate ? this.runValidateHandler(values) : {},\r\n      ]).then(([fieldErrors, schemaErrors, handlerErrors]) => {\r\n        return deepmerge.all<FormikErrors<Values>>(\r\n          [fieldErrors, schemaErrors, handlerErrors],\r\n          { arrayMerge }\r\n        );\r\n      })\r\n    );\r\n    this.validator = cancel;\r\n    return promise\r\n      .then((errors: FormikErrors<Values>) => {\r\n        if (this.didMount) {\r\n          this.setState(prevState => {\r\n              if (!isEqual(prevState.errors, errors)) {\r\n                  if (fieldId && !Object.prototype.hasOwnProperty.call(errors, fieldId)) {\r\n                      const errors = Object.keys(prevState.errors).reduce((newObj: any, key) => {\r\n                          if (key !== fieldId) {\r\n                              newObj[key] = (prevState.errors as any)[key];\r\n                          }\r\n\r\n                          return newObj\r\n                      }, {});\r\n\r\n                      return {\r\n                          errors: errors\r\n                      }\r\n                  } else {\r\n                      return {\r\n                          errors: Object.assign({}, prevState.errors, errors)\r\n                      };\r\n                  }\r\n              }\r\n              return null; // abort the update\r\n          });\r\n        }\r\n        return errors;\r\n      })\r\n      .catch(x => x);\r\n  };\r\n\r\n  handleChange = (\r\n    eventOrPath: string | React.ChangeEvent<any>\r\n  ): void | ((eventOrValue: unknown | React.ChangeEvent<any>) => void) => {\r\n    // this function actually handles the change\r\n    const executeChange = (\r\n      eventOrValue: unknown | React.ChangeEvent<any>,\r\n      maybePath?: string\r\n    ) => {\r\n      // To allow using handleChange with React Native (Web) or other UI libraries, we\r\n      // allow for the first argument to be either a value or the standard change event.\r\n      let field = maybePath;\r\n        let value: unknown;\r\n\r\n      if (isInputEvent(eventOrValue)) {\r\n        const event = eventOrValue as React.ChangeEvent<any>;\r\n        // If we can, persist the event, https://reactjs.org/docs/events.html#event-pooling\r\n        if (event.persist) {\r\n          event.persist();\r\n        }\r\n        const { type, name, id, checked, outerHTML } = event.target;\r\n        field = maybePath ? maybePath : name ? name : id;\r\n        if (!field && process.env.NODE_ENV !== 'production') {\r\n          warnAboutMissingIdentifier({\r\n            htmlContent: outerHTML,\r\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\r\n            handlerName: 'handleChange',\r\n          });\r\n        }\r\n        value = event.target.value;\r\n        if (/number|range/.test(type)) {\r\n          const parsed = parseFloat(event.target.value);\r\n          value = isNaN(parsed) ? '' : parsed;\r\n        }\r\n        if (/checkbox/.test(type)) {\r\n          value = checked;\r\n        }\r\n      } else {\r\n        value = eventOrValue;\r\n      }\r\n\r\n        if (field) {        \r\n            // Set form fields by name\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                values: setIn(prevState.values, field!, value)\r\n            }),\r\n            () => {\r\n                if (this.props.validateOnChange) {\r\n                    this.runValidations(setIn(this.state.values, field!, value), field!);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    // Actually execute logic above....\r\n    if (isString(eventOrPath)) {\r\n      const path = eventOrPath;\r\n      // cache these handlers by key like Preact's linkState does for perf boost\r\n      if (!isFunction(this.hcCache[path])) {\r\n        // set a new handle function in cache\r\n        this.hcCache[path] = (eventOrValue: unknown | React.ChangeEvent<any>) =>\r\n          executeChange(eventOrValue, path);\r\n      }\r\n      return this.hcCache[path]; // return the cached function\r\n    } else {\r\n      const event = eventOrPath;\r\n      executeChange(event);\r\n    }\r\n  };\r\n\r\n  setFieldValue = (\r\n    field: string,\r\n    value: any,\r\n    shouldValidate: boolean = true\r\n  ) => {\r\n    if (this.didMount) {\r\n      // Set form field by name\r\n      this.setState(\r\n        prevState => ({\r\n          ...prevState,\r\n          values: setIn(prevState.values, field, value),\r\n        }),\r\n        () => {\r\n          if (this.props.validateOnChange && shouldValidate) {\r\n            this.runValidations(this.state.values, field);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent<HTMLFormElement> | undefined) => {\r\n    if (e && e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    // Warn if form submission is triggered by a <button> without a\r\n    // specified `type` attribute during development. This mitigates\r\n    // a common gotcha in forms with both reset and submit buttons,\r\n    // where the dev forgets to add type=\"button\" to the reset button.\r\n    if (\r\n      process.env.NODE_ENV !== 'production' &&\r\n      typeof document !== 'undefined'\r\n    ) {\r\n      // Safely get the active element (works with IE)\r\n      const activeElement = getActiveElement();\r\n      if (\r\n        activeElement !== null &&\r\n        activeElement instanceof HTMLButtonElement\r\n      ) {\r\n        warning(\r\n          !!(\r\n            activeElement.attributes &&\r\n            activeElement.attributes.getNamedItem('type')\r\n          ),\r\n          'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\r\n        );\r\n      }\r\n    }\r\n\r\n    this.submitForm();\r\n  };\r\n\r\n    //Modificado WIS:\r\n\r\n  submitForm = () => {\r\n      if (this.props.validateOnSubmit) {\r\n          this.submitFormWithValidation();\r\n      }\r\n      else {\r\n          this.submitFormWithoutValidation();\r\n      }\r\n  };\r\n\r\n    submitFormWithoutValidation = () => {\r\n        // Recursively set all values to `true`.\r\n        this.setState(prevState => ({\r\n            isSubmitting: true,\r\n            submitCount: prevState.submitCount + 1,\r\n        }));\r\n\r\n        return new Promise((resolve) => {\r\n            this.executeSubmit();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    submitFormWithValidation = () => {\r\n        // Recursively set all values to `true`.\r\n        this.setState(prevState => ({\r\n            touched: setNestedObjectValues<FormikTouched<Values>>(\r\n                prevState.values,\r\n                true\r\n            ),\r\n            isSubmitting: true,\r\n            isValidating: true,\r\n            submitCount: prevState.submitCount + 1,\r\n        }));\r\n\r\n        return this.runValidations(this.state.values).then(combinedErrors => {\r\n            if (this.didMount) {\r\n                this.setState({ isValidating: false });\r\n            }\r\n            const isValid = Object.keys(combinedErrors).length === 0;\r\n            if (isValid) {\r\n                this.executeSubmit();\r\n            } else if (this.didMount) {\r\n                // ^^^ Make sure Formik is still mounted before calling setState\r\n                this.setState({ isSubmitting: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    //Fin modificacion WIS\r\n\r\n  executeSubmit = () => {\r\n    this.props.onSubmit(this.state.values, this.getFormikActions());\r\n  };\r\n\r\n  handleBlur = (\r\n    eventOrPath: string | React.FocusEvent<any>\r\n  ): void | ((e?: React.FocusEvent<any>) => void) => {\r\n    const executeBlur = (\r\n      maybeEvent?: React.FocusEvent<any>,\r\n      maybePath?: string\r\n    ) => {\r\n      let field = maybePath;\r\n      if (isInputEvent(maybeEvent)) {\r\n        const event = maybeEvent as React.FocusEvent<any>;\r\n        // If we can, persist the event, https://reactjs.org/docs/events.html#event-pooling\r\n        if (event.persist) {\r\n          event.persist();\r\n        }\r\n        const { name, id, outerHTML } = event.target;\r\n        field = name ? name : id;\r\n        if (!field && process.env.NODE_ENV !== 'production') {\r\n          warnAboutMissingIdentifier({\r\n            htmlContent: outerHTML,\r\n            documentationAnchorLink: 'handleblur-e-reactfocuseventany--void',\r\n            handlerName: 'handleBlur',\r\n          });\r\n        }\r\n      }\r\n\r\n      this.setState(prevState => ({\r\n        touched: setIn(prevState.touched, field!, true),\r\n      }));\r\n\r\n      if (this.props.validateOnBlur) {\r\n        this.runValidations(this.state.values, field!);\r\n      }\r\n    };\r\n    if (isString(eventOrPath)) {\r\n      const path = eventOrPath;\r\n      // cache these handlers by key like Preact's linkState does for perf boost\r\n      if (!isFunction(this.hbCache[path])) {\r\n        // set a new handle function in cache\r\n        this.hbCache[path] = (event?: React.FocusEvent<any>) =>\r\n          executeBlur(event, path);\r\n      }\r\n      return this.hbCache[path]; // return the cached function\r\n    } else {\r\n      const event = eventOrPath;\r\n      executeBlur(event);\r\n    }\r\n  };\r\n\r\n  setFieldTouched = (\r\n    field: string,\r\n    touched: boolean = true,\r\n    shouldValidate: boolean = true\r\n  ) => {\r\n    // Set touched field by name\r\n    this.setState(\r\n      prevState => ({\r\n        ...prevState,\r\n        touched: setIn(prevState.touched, field, touched),\r\n      }),\r\n      () => {\r\n        if (this.props.validateOnBlur && shouldValidate) {\r\n          this.runValidations(this.state.values, field);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  setFieldError = (field: string, message: string | undefined) => {\r\n    // Set form field by name\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      errors: setIn(prevState.errors, field, message),\r\n    }));\r\n  };\r\n\r\n    setFieldPristine = (field: string) => {\r\n        this.setState(\r\n            prevState => ({\r\n                ...prevState,\r\n                touched: setIn(prevState.touched, field, undefined)\r\n            })\r\n        );\r\n    };\r\n\r\n    resetForm = (nextValues?: Values, postUpdate?: (() => void)) => {\r\n        const values = nextValues ? nextValues : this.props.initialValues;\r\n\r\n        this.initialValues = values;\r\n\r\n        if (!postUpdate)\r\n            postUpdate = () => {};\r\n\r\n        this.setState({\r\n          isSubmitting: false,\r\n          isValidating: false,\r\n          errors: {},\r\n          touched: {},\r\n          error: undefined,\r\n          status: this.props.initialStatus,\r\n          values,\r\n            submitCount: 0,\r\n        }, postUpdate);\r\n      };\r\n\r\n  handleReset = () => {\r\n    if (this.props.onReset) {\r\n      const maybePromisedOnReset = (this.props.onReset as any)(\r\n        this.state.values,\r\n        this.getFormikActions()\r\n      );\r\n\r\n      if (isPromise(maybePromisedOnReset)) {\r\n        (maybePromisedOnReset as Promise<any>).then(this.resetForm);\r\n      } else {\r\n        this.resetForm();\r\n      }\r\n    } else {\r\n      this.resetForm();\r\n    }\r\n  };\r\n\r\n  setFormikState = (s: any, callback?: (() => void)) =>\r\n    this.setState(s, callback);\r\n\r\n  validateForm = (values: Values) => {\r\n    this.setState({ isValidating: true });\r\n    return this.runValidations(values).then(errors => {\r\n      if (this.didMount) {\r\n        this.setState({ isValidating: false });\r\n      }\r\n      return errors;\r\n    });\r\n  };\r\n\r\n  getFormikActions = (): FormikActions<Values> => {\r\n    return {\r\n      resetForm: this.resetForm,\r\n      submitForm: this.submitForm,\r\n      validateForm: this.validateForm,\r\n      validateField: this.validateField,\r\n      setError: this.setError,\r\n      setErrors: this.setErrors,\r\n      setFieldError: this.setFieldError,\r\n      setFieldTouched: this.setFieldTouched,\r\n      setFieldValue: this.setFieldValue,\r\n      setStatus: this.setStatus,\r\n      setSubmitting: this.setSubmitting,\r\n      setTouched: this.setTouched,\r\n      setValues: this.setValues,\r\n      setFormikState: this.setFormikState,\r\n    };\r\n  };\r\n\r\n  getFormikComputedProps = () => {\r\n    const { isInitialValid } = this.props;\r\n    const dirty = !isEqual(this.initialValues, this.state.values);\r\n    return {\r\n      dirty,\r\n      isValid: dirty\r\n        ? this.state.errors && Object.keys(this.state.errors).length === 0\r\n        : isInitialValid !== false && isFunction(isInitialValid)\r\n          ? (isInitialValid as (props: this['props']) => boolean)(this.props)\r\n          : (isInitialValid as boolean),\r\n      initialValues: this.initialValues,\r\n    };\r\n  };\r\n\r\n  getFormikBag = () => {\r\n    return {\r\n      ...this.state,\r\n      ...this.getFormikActions(),\r\n      ...this.getFormikComputedProps(),\r\n      // Field needs to communicate with Formik during resets\r\n      registerField: this.registerField,\r\n      unregisterField: this.unregisterField,\r\n      handleBlur: this.handleBlur,\r\n      handleChange: this.handleChange,\r\n      handleReset: this.handleReset,\r\n      handleSubmit: this.handleSubmit,\r\n      validateOnChange: this.props.validateOnChange,\r\n      validateOnBlur: this.props.validateOnBlur,\r\n    };\r\n  };\r\n\r\n  getFormikContext = () => {\r\n    return {\r\n      ...this.getFormikBag(),\r\n      validationSchema: this.props.validationSchema,\r\n      validate: this.props.validate,\r\n      initialValues: this.initialValues,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { component, render, children } = this.props;\r\n    const props = this.getFormikBag();\r\n    const ctx = this.getFormikContext();\r\n    return (\r\n      <FormikProvider value={ctx}>\r\n        {component\r\n          ? React.createElement(component as any, props)\r\n          : render\r\n            ? render(props)\r\n            : children // children come last, always called\r\n              ? isFunction(children)\r\n                ? (children as ((\r\n                    props: FormikProps<Values>\r\n                  ) => React.ReactNode))(props as FormikProps<Values>)\r\n                : !isEmptyChildren(children)\r\n                  ? React.Children.only(children)\r\n                  : null\r\n              : null}\r\n      </FormikProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction warnAboutMissingIdentifier({\r\n  htmlContent,\r\n  documentationAnchorLink,\r\n  handlerName,\r\n}: {\r\n  htmlContent: string;\r\n  documentationAnchorLink: string;\r\n  handlerName: string;\r\n}) {\r\n  console.warn(\r\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\r\n\r\n    ${htmlContent}\r\n\r\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\r\n  `\r\n  );\r\n}\r\n\r\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\r\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\r\n  let errors: any = {} as FormikErrors<Values>;\r\n  if (yupError.inner.length === 0) {\r\n    return setIn(errors, yupError.path, yupError.message);\r\n  }\r\n  for (let err of yupError.inner) {\r\n    if (!errors[err.path]) {\r\n      errors = setIn(errors, err.path, err.message);\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n\r\n/**\r\n * Validate a yup schema.\r\n */\r\nexport function validateYupSchema<T extends FormikValues>(\r\n  values: T,\r\n  schema: any,\r\n  sync: boolean = false,\r\n  context: any = {}\r\n): Promise<Partial<T>> {\r\n  let validateData: Partial<T> = {};\r\n  for (let k in values) {\r\n    if (values.hasOwnProperty(k)) {\r\n      const key = String(k);\r\n      validateData[key] = values[key] !== '' ? values[key] : undefined;\r\n    }\r\n  }\r\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\r\n    abortEarly: false,\r\n    context: context,\r\n  });\r\n}\r\n\r\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\r\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\r\n  const destination = target.slice();\r\n\r\n  source.forEach(function(e: any, i: number) {\r\n    if (typeof destination[i] === 'undefined') {\r\n      const cloneRequested = options.clone !== false;\r\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\r\n      destination[i] = shouldClone\r\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\r\n        : e;\r\n    } else if (options.isMergeableObject(e)) {\r\n      destination[i] = deepmerge(target[i], e, options);\r\n    } else if (target.indexOf(e) === -1) {\r\n      destination.push(e);\r\n    }\r\n  });\r\n  return destination;\r\n}\r\n","import * as React from 'react';\n\nimport { connect } from './connect';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContext,\n  FormikHandlers,\n} from './types';\nimport warning from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\n\n/**\n * Note: These typings could be more restrictive, but then it would limit the\n * reusability of custom <Field/> components.\n *\n * @example\n * interface MyProps {\n *   ...\n * }\n *\n * export const MyInput: React.SFC<MyProps & FieldProps> = ({\n *   field,\n *   form,\n *   ...props\n * }) =>\n *   <div>\n *     <input {...field} {...props}/>\n *     {form.touched[field.name] && form.errors[field.name]}\n *   </div>\n */\nexport interface FieldProps<V = any> {\n  field: {\n    /** Classic React change handler, keyed by input name */\n    onChange: FormikHandlers['handleChange'];\n    /** Mark input as touched */\n    onBlur: FormikHandlers['handleBlur'];\n    /** Value of the input */\n    value: any;\n    /* name of the input */\n    name: string;\n  };\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport interface FieldConfig {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<any>>\n    | React.ComponentType<void>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   */\n  render?: ((props: FieldProps<any>) => React.ReactNode);\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<any>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: ((value: any) => string | Promise<void> | undefined);\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes & FieldConfig & T;\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FieldInner<Values = {}, Props = {}> extends React.Component<\n  FieldAttributes<Props> & { formik: FormikContext<Values> },\n  {}\n> {\n  constructor(\n    props: FieldAttributes<Props> & { formik: FormikContext<Values> }\n  ) {\n    super(props);\n    const { render, children, component } = props;\n    warning(\n      !(component && render),\n      'You should not use <Field component> and <Field render> in the same <Field> component; <Field component> will be ignored'\n    );\n\n    warning(\n      !(component && children && isFunction(children)),\n      'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n    );\n\n    warning(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n    );\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, this);\n  }\n\n  componentDidUpdate(\n    prevProps: FieldAttributes<Props> & { formik: FormikContext<Values> }\n  ) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, this);\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, this);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      children,\n      component = 'input',\n      formik,\n      ...props\n    } = (this.props as FieldAttributes<Props> & {\n      formik: FormikContext<Values>;\n    }) as any;\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = {\n      value:\n        props.type === 'radio' || props.type === 'checkbox'\n          ? props.value // React uses checked={} for these inputs\n          : getIn(formik.values, name),\n      name,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n    };\n    const bag = { field, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(component as any, {\n        ref: innerRef,\n        ...field,\n        ...rest,\n        children,\n      });\n    }\n\n    return React.createElement(component as any, {\n      ...bag,\n      ...props,\n      children,\n    });\n  }\n}\n\nexport const Field = connect<FieldAttributes<any>, any>(FieldInner);\n","import * as React from 'react';\nimport { connect } from './connect';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\nexport const Form = connect<FormikFormProps>(\n  ({ formik: { handleReset, handleSubmit }, ...props }) => (\n    <form onReset={handleReset} onSubmit={handleSubmit} {...props} />\n  )\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikActions,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik actions + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikActions<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikActions<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            render={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics<OuterProps, OuterProps & FormikProps<Values>>(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContext,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport { getIn, isEmptyChildren, isFunction, setIn } from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = [...(array || [])];\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (array: any[], indexA: number, indexB: number) => {\n  const copy = [...(array || [])];\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy[index] = value;\n  return copy;\n};\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContext<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContext<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n      validateOnChange,\n      formik: { setFormikState, validateForm },\n    } = this.props;\n    setFormikState(\n      (prevState: FormikState<any>) => {\n        let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        let updateTouched =\n          typeof alterTouched === 'function' ? alterTouched : fn;\n\n        return {\n          ...prevState,\n          values: setIn(\n            prevState.values,\n            name,\n            fn(getIn(prevState.values, name))\n          ),\n          errors: alterErrors\n            ? setIn(\n                prevState.errors,\n                name,\n                updateErrors(getIn(prevState.errors, name))\n              )\n            : prevState.errors,\n          touched: alterTouched\n            ? setIn(\n                prevState.touched,\n                name,\n                updateTouched(getIn(prevState.touched, name))\n              )\n            : prevState.touched,\n        };\n      },\n      () => {\n        if (validateOnChange) {\n          validateForm();\n        }\n      }\n    );\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (array: any[]) => [...(array || []), cloneDeep(value)],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) length = arr.length;\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) length = arr.length;\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? [...array] : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n        ? (render as any)(props)\n        : children // children come last, always called\n          ? typeof children === 'function'\n            ? (children as any)(props)\n            : !isEmptyChildren(children) ? React.Children.only(children) : null\n          : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\r\n\r\nimport { connect } from './connect';\r\nimport {\r\n  FormikProps,\r\n  GenericFieldHTMLAttributes,\r\n  FormikContext,\r\n} from './types';\r\nimport warning from 'tiny-warning';\r\nimport { getIn, isEmptyChildren, isFunction } from './utils';\r\n\r\nexport interface FastFieldProps<V = any> {\r\n  field: {\r\n    /** Classic React change handler, keyed by input name */\r\n    onChange: (e: React.ChangeEvent<any>) => void;\r\n    /** Mark input as touched */\r\n    onBlur: (e: any) => void;\r\n    /** Value of the input */\r\n    value: any;\r\n    /* name of the input */\r\n    name: string;\r\n  };\r\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\r\n}\r\n\r\nexport interface FastFieldConfig<T> {\r\n  /**\r\n   * Field component to render. Can either be a string like 'select' or a component.\r\n   */\r\n  component?:\r\n    | string\r\n    | React.ComponentType<FastFieldProps<any>>\r\n    | React.ComponentType<void>;\r\n\r\n  /**\r\n   * Render prop (works like React router's <Route render={props =>} />)\r\n   */\r\n  render?: ((props: FastFieldProps<any>) => React.ReactNode);\r\n\r\n  /**\r\n   * Children render function <Field name>{props => ...}</Field>)\r\n   */\r\n  children?:\r\n    | ((props: FastFieldProps<any>) => React.ReactNode)\r\n    | React.ReactNode;\r\n\r\n  /**\r\n   * Validate a single field value independently\r\n   */\r\n  validate?: ((value: any) => string | Promise<void> | undefined);\r\n\r\n  /** Override FastField's default shouldComponentUpdate */\r\n  shouldUpdate?: (\r\n    nextProps: T & GenericFieldHTMLAttributes & { formik: FormikContext<any> },\r\n    props: {}\r\n  ) => boolean;\r\n\r\n  /**\r\n   * Field name\r\n   */\r\n  name: string;\r\n\r\n  /** HTML class */\r\n  className?: string;\r\n\r\n  /** HTML input type */\r\n  type?: string;\r\n\r\n  /** Field value */\r\n  value?: any;\r\n\r\n  /** Inner ref */\r\n  innerRef?: (instance: any) => void;\r\n}\r\n\r\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\r\n  FastFieldConfig<T> &\r\n  T;\r\n\r\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\r\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\r\n  FastFieldAttributes<Props> & { formik: FormikContext<Values> },\r\n  {}\r\n> {\r\n  constructor(\r\n    props: FastFieldAttributes<Props> & { formik: FormikContext<Values> }\r\n  ) {\r\n    super(props);\r\n    const { render, children, component } = props;\r\n    warning(\r\n      !(component && render),\r\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\r\n    );\r\n\r\n    warning(\r\n      !(component && children && isFunction(children)),\r\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\r\n    );\r\n\r\n    warning(\r\n      !(render && children && !isEmptyChildren(children)),\r\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\r\n    );\r\n  }\r\n\r\n  shouldComponentUpdate(\r\n    props: FastFieldAttributes<Props> & { formik: FormikContext<Values> }\r\n  ) {\r\n    if (this.props.shouldUpdate) {\r\n      return this.props.shouldUpdate(props, this.props);\r\n    } else if (\r\n      getIn(this.props.formik.values, this.props.name) !==\r\n        getIn(props.formik.values, this.props.name) ||\r\n      getIn(this.props.formik.errors, this.props.name) !==\r\n        getIn(props.formik.errors, this.props.name) ||\r\n      getIn(this.props.formik.touched, this.props.name) !==\r\n        getIn(props.formik.touched, this.props.name) ||\r\n      Object.keys(this.props).length !== Object.keys(props).length ||\r\n      this.props.formik.isSubmitting !== props.formik.isSubmitting\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Register the Field with the parent Formik. Parent will cycle through\r\n    // registered Field's validate fns right prior to submit\r\n    this.props.formik.registerField(this.props.name, this);\r\n  }\r\n\r\n  componentDidUpdate(\r\n    prevProps: FastFieldAttributes<Props> & { formik: FormikContext<Values> }\r\n  ) {\r\n    if (this.props.name !== prevProps.name) {\r\n      this.props.formik.unregisterField(prevProps.name);\r\n      this.props.formik.registerField(this.props.name, this);\r\n    }\r\n\r\n    if (this.props.validate !== prevProps.validate) {\r\n      this.props.formik.registerField(this.props.name, this);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.formik.unregisterField(this.props.name);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      validate,\r\n      name,\r\n      render,\r\n      children,\r\n      component = 'input',\r\n      formik,\r\n      shouldUpdate,\r\n      ...props\r\n    } = (this.props as FastFieldAttributes<Props> & {\r\n      formik: FormikContext<Values>;\r\n    }) as any;\r\n    const {\r\n      validate: _validate,\r\n      validationSchema: _validationSchema,\r\n      ...restOfFormik\r\n    } = formik;\r\n    const field = {\r\n      value:\r\n        props.type === 'radio' || props.type === 'checkbox'\r\n          ? props.value // React uses checked={} for these inputs\r\n          : getIn(formik.values, name),\r\n      name,\r\n      onChange: formik.handleChange,\r\n      onBlur: formik.handleBlur,\r\n    };\r\n    const bag = { field, form: restOfFormik };\r\n\r\n    if (render) {\r\n      return (render as any)(bag);\r\n    }\r\n\r\n    if (isFunction(children)) {\r\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\r\n    }\r\n\r\n    if (typeof component === 'string') {\r\n      const { innerRef, ...rest } = props;\r\n      return React.createElement(component as any, {\r\n        ref: innerRef,\r\n        ...field,\r\n        ...rest,\r\n        children,\r\n      });\r\n    }\r\n\r\n    return React.createElement(component as any, {\r\n      ...bag,\r\n      ...props,\r\n      children,\r\n    });\r\n  }\r\n}\r\n\r\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\r\n","import * as React from 'react';\nimport { FormikContext } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: ((errorMessage: string) => React.ReactNode);\n  render?: ((errorMessage: string) => React.ReactNode);\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContext<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContext<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render) ? render(error) : null\n        : children\n          ? isFunction(children) ? children(error) : null\n          : component\n            ? React.createElement(component, rest as any, error)\n            : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContext<any> }\n>(ErrorMessageImpl);\n"],"names":["React.createElement","React.Children","tslib_1.__extends","React.Component"],"mappings":"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"}